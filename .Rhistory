X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
#### Count -------------------------------------------------------------------
ggplot(plot.df, aes(x = Sex, y = Mean, fill = AgeGroup)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = colours)+
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab("Deaths") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
#### Percent -----------------------------------------------------------------
ggplot(plot.df, aes(x = Sex, y = Mean, fill = AgeGroup)) +
geom_bar(stat = "identity", position = position_fill(reverse = TRUE)) +
scale_y_continuous(labels = percent_format()) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = colours)+
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab("Deaths") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
### Stacked Bar (Grouped by Age) --------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Total_mortality_", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
library(dplyr)
library(ggplot2)
library(plotly)
library(scales)
summary.df <- read.csv("/Users/kurtissobkowich/Git/GBADs ARIF DPM Dashboard/Sample DPM Outputs/cattle_trial_CLM_current_summary.csv")
full.df <- read.csv("/Users/kurtissobkowich/Git/GBADs ARIF DPM Dashboard/Sample DPM Outputs/cattle_trial_CLM_current_cumulative total.csv")
# Consistent Plot Theme ---------------------------------------------------
theme <- theme_minimal() +
theme(
text = element_text(family = "Arial", size = 12),
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
axis.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size = 12),
panel.grid.major = element_line(color = "gray80"),
panel.grid.minor = element_blank(),
strip.text = element_text(size = 12)
)
# Colour Palette ----------------------------------------------------------
colours <- c("#F17105", "#1A8FE3", "#E6C229","#D11149", "#6610F2")
# Format Y-Labs into Short Forms ------------------------------------------
format_y_labels <- function(x) {
if (max(x, na.rm = TRUE) >= 1e9) {
return(label_number(scale = 1e-9, suffix = " bln"))
} else if (max(x, na.rm = TRUE) >= 1e6) {
return(label_number(scale = 1e-6, suffix = " mil"))
} else if (max(x, na.rm = TRUE) >= 1e3) {
return(label_number(scale = 1e-3, suffix = "k"))
} else {
return(label_number())
}
}
# Format X-Labs into Full Names -------------------------------------------
category.map <- c(
"JF" = "Juvenile Females",
"JM" = "Juvenile Males",
"SubAF" = "Sub-Adult Females",
"SubAM" = "Sub-Adult Males",
"AF" = "Adult Females",
"AM" = "Adult Males",
"Ox" = "Oxen"
)
format_x_labels <- function(x) {
sapply(x, function(val) {
matched_keys <- names(category.map)[sapply(names(category.map), function(k) grepl(k, val))]
if (length(matched_keys) > 0) {
best_match <- matched_keys[which.max(nchar(matched_keys))]
category.map[[best_match]]
} else {
val
}
})
}
# PLOTS -------------------------------------------------------------------
## Population Breakdown ----------------------------------------------------
### Bar ---------------------------------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Num_", X) & !grepl("_offtake", X) & !grepl("_N", X)) %>%
mutate(X = format_x_labels(X))
ggplot(data = plot.df, aes(x = X, y = Mean)) +
geom_bar(stat = "identity", fill = "#F17105") +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
labs(title = NULL)+
xlab("Sub-group")+
ylab("Head")+
theme
### Bar (Grouped by Sex) ----------------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Num_", X) & !grepl("_offtake", X) & !grepl("_N", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
ggplot(data = plot.df, aes(x = X, y = Mean, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
facet_grid(~ Sex, scales = "free_x", space = "free_x") +
scale_fill_manual(values = c("Male" = "#F17105", "Female" = "#1A8FE3"))+
labs(title = NULL) +
xlab("Sub-group") +
ylab("Head") +
theme +
theme(legend.position = "none")
### Stacked Bar (Grouped by Sex) --------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Num_", X) & !grepl("_offtake", X) & !grepl("_N", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
#### Count -------------------------------------------------------------------
ggplot(plot.df, aes(x = Sex, y = Mean, fill = AgeGroup)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = colours)+
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab("Head") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
#### Percent -----------------------------------------------------------------
ggplot(plot.df, aes(x = Sex, y = Mean, fill = AgeGroup)) +
geom_bar(stat = "identity", position = position_fill(reverse = TRUE)) +
scale_y_continuous(labels = percent_format()) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = colours)+
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab("Head") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
### Stacked Bar (Grouped by Age) --------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Num_", X) & !grepl("_offtake", X) & !grepl("_N", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
#### Count -------------------------------------------------------------------
ggplot(plot.df, aes(x = AgeGroup, y = Mean, fill = Sex)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = c("Male" = "#F17105", "Female" = "#1A8FE3"))+
labs(title = NULL) +
xlab(NULL) +
ylab("Head") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
#### Percent -----------------------------------------------------------------
ggplot(plot.df, aes(x = AgeGroup, y = Mean, fill = Sex)) +
geom_bar(stat = "identity", position = position_fill(reverse = TRUE)) +
scale_y_continuous(labels = percent_format()) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = c("Male" = "#F17105", "Female" = "#1A8FE3"))+
labs(title = NULL) +
xlab(NULL) +
ylab("Head") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
### Pie Chart (Grouped by Sex) ----------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Num_", X) & !grepl("_offtake", X) & !grepl("_N", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
agg_data <- plot.df %>%
group_by(Sex) %>%
summarise(total = sum(Mean)) %>%
mutate(perc = total / sum(total) * 100,
label = paste0(round(perc, 1), "%"))
ggplot(agg_data, aes(x = "", y = total, fill = Sex)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 6,      # Increase the text size (adjust as needed)
color = "white") +
scale_fill_manual(values = colours) +
labs(title = NULL, fill = "Sex") +
xlab(NULL) +
ylab(NULL) +
theme +
theme(legend.position = "bottom",
panel.grid = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.x=element_blank()
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
### Pie Chart (Grouped by Age) ----------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Num_", X) & !grepl("_offtake", X) & !grepl("_N", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
agg_data <- plot.df %>%
group_by(AgeGroup) %>%
summarise(total = sum(Mean)) %>%
mutate(perc = total / sum(total) * 100,
label = paste0(round(perc, 1), "%"))
ggplot(agg_data, aes(x = "", y = total, fill = AgeGroup)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 6,      # Increase the text size (adjust as needed)
color = "white") +
scale_fill_manual(values = colours) +
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab(NULL) +
theme +
theme(legend.position = "bottom",
panel.grid = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.x=element_blank()
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
## Mortality ---------------------------------------------------------------
### Bar ---------------------------------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Total_mortality_", X)) %>%
mutate(X = format_x_labels(X))
ggplot(data = plot.df, aes(x = X, y = Mean)) +
geom_bar(stat = "identity", fill = "#F17105") +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
labs(title = NULL)+
xlab("Sub-group")+
ylab("Deaths")+
theme
### Bar (Grouped by Sex) ----------------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Total_mortality_", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
ggplot(data = plot.df, aes(x = X, y = Mean, fill = Sex)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
facet_grid(~ Sex, scales = "free_x", space = "free_x") +
scale_fill_manual(values = c("Male" = "#F17105", "Female" = "#1A8FE3"))+
labs(title = NULL) +
xlab("Sub-group") +
ylab("Head") +
theme +
theme(legend.position = "none")
### Stacked Bar (Grouped by Sex) --------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Total_mortality_", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
#### Count -------------------------------------------------------------------
ggplot(plot.df, aes(x = Sex, y = Mean, fill = AgeGroup)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = colours)+
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab("Deaths") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
#### Percent -----------------------------------------------------------------
ggplot(plot.df, aes(x = Sex, y = Mean, fill = AgeGroup)) +
geom_bar(stat = "identity", position = position_fill(reverse = TRUE)) +
scale_y_continuous(labels = percent_format()) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = colours)+
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab("Deaths") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
### Stacked Bar (Grouped by Age) --------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Total_mortality_", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
#### Count -------------------------------------------------------------------
ggplot(plot.df, aes(x = AgeGroup, y = Mean, fill = Sex)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
scale_y_continuous(labels = format_y_labels(plot.df$Mean)) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = c("Male" = "#F17105", "Female" = "#1A8FE3"))+
labs(title = NULL) +
xlab(NULL) +
ylab("Head") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
#### Percent -----------------------------------------------------------------
ggplot(plot.df, aes(x = AgeGroup, y = Mean, fill = Sex)) +
geom_bar(stat = "identity", position = position_fill(reverse = TRUE)) +
scale_y_continuous(labels = percent_format()) +
scale_x_discrete(labels = format_x_labels(plot.df$X)) +
scale_fill_manual(values = c("Male" = "#F17105", "Female" = "#1A8FE3"))+
labs(title = NULL) +
xlab(NULL) +
ylab("Head") +
theme +
theme(legend.position = "bottom")+
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
### Pie Chart (Grouped by Sex) ----------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Total_mortality_", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
agg_data <- plot.df %>%
group_by(Sex) %>%
summarise(total = sum(Mean))%>%
mutate(perc = total / sum(total) * 100,
label = paste0(round(perc, 1), "%"))
ggplot(agg_data, aes(x = "", y = total, fill = Sex)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 6,      # Increase the text size (adjust as needed)
color = "white") +
scale_fill_manual(values = colours) +
labs(title = NULL, fill = "Sex") +
xlab(NULL) +
ylab(NULL) +
theme +
theme(legend.position = "bottom",
panel.grid = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.x=element_blank()
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
### Pie Chart (Grouped by Age) ----------------------------------------------
plot.df <- summary.df %>%
filter(grepl("Total_mortality_", X)) %>%
mutate(Sex = case_when(
grepl("JF|SubAF|AF", X) ~ "Female",
grepl("JM|SubAM|AM|Ox", X) ~ "Male",
TRUE ~ "Other"
),
X = format_x_labels(X))
plot.df$AgeGroup <- with(plot.df,
ifelse(grepl("Juvenile", X), "Juvenile",
ifelse(grepl("Sub-Adult", X), "Sub-Adult",
ifelse(grepl("Oxen", X), "Oxen",
ifelse(grepl("Adult", X), "Adult", NA)))))
plot.df$AgeGroup <- factor(plot.df$AgeGroup, levels = c("Juvenile", "Sub-Adult", "Adult", "Oxen"))
agg_data <- plot.df %>%
group_by(AgeGroup) %>%
summarise(total = sum(Mean)) %>%
mutate(perc = total / sum(total) * 100,
label = paste0(round(perc, 1), "%"))
ggplot(agg_data, aes(x = "", y = total, fill = AgeGroup)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 6,      # Increase the text size (adjust as needed)
color = "white") +
scale_fill_manual(values = colours) +
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab(NULL) +
theme +
theme(legend.position = "bottom",
panel.grid = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.x=element_blank()
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
ggplot(agg_data, aes(x = "", y = total, fill = AgeGroup)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 6,      # Increase the text size (adjust as needed)
color = "white") +
scale_fill_manual(values = colours) +
labs(title = NULL, fill = "Sub-Group") +
xlab("Deaths") +
ylab(NULL) +
theme +
theme(legend.position = "bottom",
panel.grid = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.x=element_blank()
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
ggplot(agg_data, aes(x = "", y = total, fill = AgeGroup)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 6,      # Increase the text size (adjust as needed)
color = "white") +
scale_fill_manual(values = colours) +
labs(title = NULL, fill = "Sub-Group") +
xlab(NULL) +
ylab("Deaths") +
theme +
theme(legend.position = "bottom",
panel.grid = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.x=element_blank()
) +
guides(fill = guide_legend(title.position = "top", title.hjust = 0.5))
